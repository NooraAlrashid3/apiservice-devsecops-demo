
name: Deploying Springboot(War) to Tomcat on Azure Windows Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GITHUBRUNNER: ${{github.run_number}}



jobs:
  build-springboot-app:
    name: Build Springboot Application
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Verify Java Version
        run: java -version

      - name: Download the code
        uses: actions/checkout@v3

      - name: Fix the Permissions of mvnw command
        run: chmod +x mvnw

      - name: Inject GITHUB_RUN_NUMBER into pom.xml
        run: sed -i "s/REPLACEVERSION/${{env.GITHUBRUNNER}}/g" pom.xml

      - name: Build the code
        run: ./mvnw package

      - name: Verify the Build is Created or not
        run: ls -l target/*.war

      - name: Upload the file to artifact
        uses: actions/upload-artifact@v3
        with: 
          name: my-artifact
          path: target/apiservice-${{env.GITHUBRUNNER}}.war

      - name: Verify the File uploaded or not
        run: ls -l target/*.war

      

  deployment-springboot-app:    
    name: Deployment Springboot Application
    runs-on: ubuntu-latest
    needs: build-springboot-app
    steps:
      - name: Download the file from artifact
        uses: actions/download-artifact@v3
        with:
          name: my-artifact

          

      - name: command after downloading
        run: ls -l 

      - name: Deploy the Build to Tomcat (SSH to window)
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: 'apiservice-${{env.GITHUBRUNNER}}.war'                                                 
          remote: 'C:\Program Files\Apache Software Foundation\Tomcat 10.0\webapps\'                                               
          host: ${{secrets.HOST}}                                                                       
          user: ${{secrets.USER}}                                     
          password: ${{secrets.PASSWORD}}                                                                   
          pre_upload: echo "This will be executed before the upload!"  
          post_upload: echo "This will be executed after the upload!"  
          ssh_options: -o StrictHostKeyChecking=no                     
          scp_options: -v  

  verify-springboot-app:
    name: Verify Springboot Application
    runs-on: ubuntu-latest
    needs: deployment-springboot-app
    steps:
      - name: Verify the health of the app
        run: curl http://20.106.254.180:8080/apiservice-32/actuator/health
        

        
      
